apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.service.name }}
  labels:
    name: {{ .Values.service.name }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      name: {{ .Values.service.name }}
  template:
    metadata:
      annotations:
        random: {{ randAlphaNum 5 | quote }}
      labels:
        name: {{ .Values.service.name }}
    spec:
      serviceAccountName: {{ .Values.serviceAccount.name }}
      imagePullSecrets:
        {{- toYaml .Values.imagePullSecrets | nindent 8 }}
      {{- if or (not (hasKey .Values "useGkeAffinity")) .Values.useGkeAffinity }}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: cloud.google.com/gke-nodepool
                    operator: In
                    values:
                      - pool-1
      {{- end }}
      containers:
        - name: {{ .Values.service.name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          {{- if eq .Values.healthcheck.type "http" }}
          livenessProbe:
            httpGet:
              path: {{ .Values.healthcheck.path }}
              port: {{ .Values.service.targetport }}
            initialDelaySeconds: 10
            periodSeconds: 60
          readinessProbe:
            httpGet:
              path: {{ .Values.healthcheck.path }}
              port: {{ .Values.service.targetport }}
            initialDelaySeconds: 10
            periodSeconds: 60
          {{- else }}
          livenessProbe:
            tcpSocket:
              port: {{ .Values.service.targetport }}
            initialDelaySeconds: 10
            periodSeconds: 60
          readinessProbe:
            tcpSocket:
              port: {{ .Values.service.targetport }}
            initialDelaySeconds: 10
            periodSeconds: 60
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- if .Values.volumemounts }}
          volumeMounts:
            {{- toYaml .Values.volumemounts | nindent 12 }}
          {{- end }}
          {{- with .Values.env }}
          env:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- if .Values.volumes }}
      volumes:
        {{- toYaml .Values.volumes | nindent 8 }}
      {{- end }}
      {{- if .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
